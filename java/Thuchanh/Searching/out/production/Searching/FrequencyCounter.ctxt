#BlueJ class context
comment0.target=FrequencyCounter
comment0.text=\r\n\ \ The\ {@code\ FrequencyCounter}\ class\ provides\ a\ client\ for\ \r\n\ \ reading\ in\ a\ sequence\ of\ words\ and\ printing\ a\ word\ (exceeding\r\n\ \ a\ given\ length)\ that\ occurs\ most\ frequently.\ It\ is\ useful\ as\r\n\ \ a\ test\ client\ for\ various\ symbol\ table\ implementations.\r\n\ \ <p>\r\n\ \ For\ additional\ documentation,\ see\ <a\ href\="https\://algs4.cs.princeton.edu/31elementary">Section\ 3.1</a>\ of\r\n\ \ <i>Algorithms,\ 4th\ Edition</i>\ by\ Robert\ Sedgewick\ and\ Kevin\ Wayne.\r\n\r\n\ \ @author\ Robert\ Sedgewick\r\n\ \ @author\ Kevin\ Wayne\r\n
comment1.params=filename\ minlen
comment1.target=FrequencyCounter(java.lang.String,\ int)
comment2.params=
comment2.target=FrequencyCounter.WordCount\ getMaxcount()
comment3.params=
comment3.target=int\ numberOfWords()
comment4.params=args
comment4.target=void\ main(java.lang.String[])
comment4.text=\r\n\ Reads\ in\ a\ command-line\ integer\ and\ sequence\ of\ words\ from\r\n\ standard\ input\ and\ prints\ out\ a\ word\ (whose\ length\ exceeds\r\n\ the\ threshold)\ that\ occurs\ most\ frequently\ to\ standard\ output.\r\n\ It\ also\ prints\ out\ the\ number\ of\ words\ whose\ length\ exceeds\r\n\ the\ threshold\ and\ the\ number\ of\ distinct\ such\ words.\r\n\r\n\ @param\ args\ the\ command-line\ arguments\r\n
numComments=5
